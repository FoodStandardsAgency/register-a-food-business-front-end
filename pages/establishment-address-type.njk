{% from "../node_modules/govuk-frontend/dist/govuk/components/radios/macro.njk" import govukRadios %}
{% from "../node_modules/govuk-frontend/dist/govuk/components/button/macro.njk" import govukButton %}
{% from "../components/PostForm.njk" import postForm %}
{% from "../node_modules/govuk-frontend/dist/govuk/components/details/macro.njk" import govukDetails %}
{% from "../node_modules/govuk-frontend/dist/govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "../node_modules/govuk-frontend/dist/govuk/components/fieldset/macro.njk" import govukFieldset %}
{% from "../components/EstablishmentDetails.njk" import establishmentHiddenDetails %}
{% from "../components/ProcessedErrorSummary.njk" import processedErrorSummary %}
{% extends "layout.njk" %}
{% block content %}
  {{ props.currentPageWithQuery }}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      {% call postForm("/findaddress" + "/establishment-address", props.csrfToken, props.language) -%}
      {{ processedErrorSummary(props.validatorErrors, props.language) }}
      {% call govukFieldset({
            legend: {
              text: __("Where is this establishment located?", props.language),
              classes: "govuk-fieldset__legend--l",
              isPageHeading: true
                    }
            }) %}
            {{ establishmentHiddenDetails(props) }}
      <input type="hidden" value="{{ props.cumulativeFullAnswers.establishment_postcode_find }}" name="establishment_postcode_find">
      {{ govukRadios({
      idPrefix: "establishment_type",
      name: "establishment_type",
      items: [
        {
          value: props.enums.establishmentType.MOBILE.key,
          text: __("In a mobile or moveable premises", props.language),
          id: "establishment_type_mobile_moveable",
          checked: props.cumulativeFullAnswers.establishment_type === props.enums.establishmentType.MOBILE.key
        },
        {
          value: props.enums.establishmentType.DOMESTIC.key,
          text: __("In a home or domestic premises", props.language),
          id: "establishment_type_home_domestic",
          checked: props.cumulativeFullAnswers.establishment_type === props.enums.establishmentType.DOMESTIC.key
        },
        {
          value: props.enums.establishmentType.COMMERCIAL.key,
          text: __("In a commercial or public premises", props.language),
          id: "establishment_type_business_commercial",
          checked: props.cumulativeFullAnswers.establishment_type === props.enums.establishmentType.COMMERCIAL.key
        }
      ],
      errorMessage: {
        text: __(props.validatorErrors.establishment_type, props.language)} if props.validatorErrors.establishment_type
      }) }}
      {% endcall %}
      {{ govukButton({
            text: __("Save and continue", props.language) if props.editModeFirstPage else __("Continue", props.language)
          }) }}
      {%- endcall %}
    </div>
  </div>
{% endblock %}