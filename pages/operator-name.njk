{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "../components/PostForm.njk" import postForm %}
{% from "../components/ProcessedErrorSummary.njk" import processedErrorSummary %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/details/macro.njk" import govukDetails %}
{% extends "layout.njk" %}
{% block content %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      {% call postForm(props.formAction, props.csrfToken, props.language) -%}
      {{ processedErrorSummary(props.validatorErrors, props.language) }}
      {% call govukFieldset({
            legend: {
              text: __("What is the operator's name?", props.language),
              classes: "govuk-fieldset__legend--l",
              isPageHeading: true
            }  
          }) %}
      {{ govukDetails({
                summaryText: __("What is the operator's name?", props.language),
                text: __("The operator is the person or people, charity or company who makes the decisions about the food business. They decide what it serves and how it operates.", props.language)
              }) }}
      {{ govukInput({
                "label": {
                  "text": __("First and middle names", props.language)
                },
                "id": "operator_first_name",
                "name": "operator_first_name",
                "classes": "govuk-label--l",
                "autoComplete": "given-name",
                "value": props.cumulativeFullAnswers.operator_first_name,
              "errorMessage": { "text": __(props.validatorErrors.operator_first_name, props.language) } if props.validatorErrors.operator_first_name
            }) }}
      {{ govukInput({
                "label": {
                  "text": __("Last name", props.language)
                },
                "id": "operator_last_name",
                "name": "operator_last_name",
                "classes": "govuk-label--l",
                "autoComplete": "family-name",
                "value": props.cumulativeFullAnswers.operator_last_name,
                "errorMessage": { "text": __(props.validatorErrors.operator_last_name, props.language) } if props.validatorErrors.operator_last_name
            }) }}
      {% endcall %}
      {{ govukButton({
            text: __("Save and continue", props.language) if props.editModeFirstPage else __("Continue", props.language)
          }) }}
      {%- endcall %}
    </div>
  </div>
{% endblock %}