{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}
{% from "govuk/components/details/macro.njk" import govukDetails %}
{% from "../components/PostForm.njk" import postForm %}
{% from "../components/ProcessedErrorSummary.njk" import processedErrorSummary %}
{% from "../components/EstablishmentDetails.njk" import establishmentHiddenDetails %}
{% from "govuk/components/details/macro.njk" import govukDetails %}
{% extends "layout.njk" %}
{% block content %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

      {% call postForm("/findlocalauthority" + props.currentPage, props.csrfToken, props.language) -%}
      {{ processedErrorSummary(props.validatorErrors, props.language) }}
      {% call govukFieldset({
                legend: {
                    text: __("What is the establishment's postcode?", props.language),
                    classes: "govuk-fieldset__legend--l",
                    isPageHeading: true
                }
                }) %}
      {{ establishmentHiddenDetails(props) }}
      <p id="changed-name-hint" class="govuk-hint">{{ __("The postcode of your establishment will help to direct the registration to the correct food safety team.", props.language) }}</p>
      {% if props.laLookupNote %}
        <p class="govuk-hint" style="border-style: solid; border-color: red; font-weight: bold; padding: 10px">{{ props.laLookupNote }}</p>
      {% endif %}
      {% endcall %}
      {{ govukInput({
                    "label": {
                    "text": __("Postcode", props.language)
                    },
                    "hint": {
                    "text": __("For example, SW1H 9EX", props.language)
                    },
                    "id": "establishment_postcode_find",
                    "name": "establishment_postcode_find",
                    "classes": "govuk-input--width-10",
                    "autoComplete": "postal-code",
                    "value": props.cumulativeFullAnswers.establishment_postcode_find,
                    "errorMessage":  { "text": __(props.validatorErrors.establishment_postcode_find, props.language) } if props.validatorErrors.establishment_postcode_find
                }) }}
      {{ govukButton({
            text: __("Continue", props.language)
        }) }}
      {% endcall %}
    </div>
  </div>
{% endblock %}