name: Build & Test
permissions:
  checks: write
  contents: read
  issues: write
  pull-requests: write
on:
  workflow_call:
  workflow_dispatch:
  pull_request:
    branches:
      - develop
      - master
      - "release/**"
      - "hotfix/**"

jobs:
  build_lint_test:
    name: Build, Lint, Test
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 18.16
        uses: actions/setup-node@v1
        with:
          node-version: 18.16

      - name: Create .npmrc
        run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc

      - name: Npm version
        run: npm -v

      - name: Install
        run: npm install

      - name: Compile css for production
        run: npm run sass-prod

      - name: Format
        run: npm run format:verify

      - name: Lint
        run: npm run lint

      - name: Unit tests
        run: npm run test:ci

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: ./reports/TEST-unit.xml
          check_name: "Unit Test Results"

      - name: Generate Coverage Summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ./coverage/cobertura-coverage.xml
          format: markdown
          output: both
      - name: Generate Coverage Summary
        run: echo '## Coverage Summary ' >> $GITHUB_STEP_SUMMARY && cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

      - name: Prune dev dependencies
        run: npm prune --production

      - name: Remove reporting folders
        run: rm -rf coverage reports

      - name: Zip artifact for deployment
        run: zip build.zip ./* -r

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build.zip
